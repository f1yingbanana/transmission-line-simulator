#
# Transmission Line Simulator
# 
# Author(s): Jiacong Xu
# Created: Jul-9-2017
#

#import constants util.constants
#:include src/views/contextmenu.kv
#:include src/views/materialtextfield.kv
#:include src/views/loadeditor.kv
#:include src/views/wireeditor.kv
#:include src/views/sourceeditor.kv
#:include src/views/oscilloscopeeditor.kv

<CircuitView>:
    _begin: 0, 0
    _end: 0, 0

    canvas:
        # We draw a bunch of wires that are a part of every diagram
        Color:
            rgba: constants.TEXT_BLACK

        Ellipse:
            pos: self._begin[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Ellipse:
            pos: self._begin[0] - constants.WIRE_THICKNESS / 2.0, self._end[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Ellipse:
            pos: self._end[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Ellipse:
            pos: self._end[0] - constants.WIRE_THICKNESS / 2.0, self._end[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        RoundedRectangle:
            pos: self._begin[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] + constants.WIRE_THICKNESS * 1.5
            size: constants.WIRE_THICKNESS, self._end[1] - self._begin[1] - 3 * constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        RoundedRectangle:
            pos: self._end[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] + constants.WIRE_THICKNESS * 1.5
            size: constants.WIRE_THICKNESS, self._end[1] - self._begin[1] - 3 * constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        RoundedRectangle:
            pos: self._begin[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] - self.height / 15 - constants.WIRE_THICKNESS * 0.5
            size: constants.WIRE_THICKNESS, self.height / 15 - constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        RoundedRectangle:
            pos: self._begin[0] - self.height / 20, self._begin[1] - self.height / 15 - constants.WIRE_THICKNESS * 0.5
            size: self.height / 10, constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        RoundedRectangle:
            pos: self._begin[0] - self.height / 30, self._begin[1] - self.height / 15 - constants.WIRE_THICKNESS * 2.5
            size: self.height / 15, constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        RoundedRectangle:
            pos: self._begin[0] - self.height / 60, self._begin[1] - self.height / 15 - constants.WIRE_THICKNESS * 4.5
            size: self.height / 30, constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2


<WireWidget>:
    canvas:
        Color:
            rgba: constants.WIRE_HIGHLIGHT if self.hovered and not self.disabled else (0, 0, 0, 0)

        RoundedRectangle:
            pos: self.x, self.center_y - constants.WIRE_THICKNESS
            size: max(0, self.width), 2 * constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Color:
            rgba: constants.PRIMARY if not self.disabled else constants.TEXT_GRAY

        RoundedRectangle:
            pos: self.x + constants.WIRE_THICKNESS / 2, self.center_y - constants.WIRE_THICKNESS / 2
            size: max(0, self.width - constants.WIRE_THICKNESS), constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        Color:
            rgba: constants.TEXT_BLACK

        Ellipse:
            pos: self.x - constants.WIRE_THICKNESS * 1.5, self.center_y - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Ellipse:
            pos: self.x + self.width + constants.WIRE_THICKNESS * 0.5, self.center_y - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS


<LoadWidget>:
    canvas:
        Color:
            rgba: constants.WIRE_HIGHLIGHT if self.hovered and not self.disabled else (0, 0, 0, 0)

        Rectangle:
            pos: self.pos[0] - constants.WIRE_THICKNESS / 2.0, self.pos[1] - constants.WIRE_THICKNESS / 2.0
            size: self.size[0] + constants.WIRE_THICKNESS, self.size[1] + constants.WIRE_THICKNESS

        Color:
            rgba: constants.PRIMARY if not self.disabled else constants.TEXT_GRAY

        Rectangle:
            pos: self.pos
            size: self.size

        Color:
            rgba: 1, 1, 1, 1

        Rectangle:
            pos: self.x + constants.WIRE_THICKNESS, self.y + constants.WIRE_THICKNESS
            size: self.width - 2 * constants.WIRE_THICKNESS, self.height - 2 * constants.WIRE_THICKNESS


<SourceWidget>:
    id: source

    canvas:
        Color:
            rgba: constants.WIRE_HIGHLIGHT if self.hovered and not self.disabled else (0, 0, 0, 0)

        Ellipse:
            pos: self.x - constants.WIRE_THICKNESS / 2.0, self.y - constants.WIRE_THICKNESS / 2.0
            size: self.width + constants.WIRE_THICKNESS, self.height + constants.WIRE_THICKNESS

        Color:
            rgba: constants.PRIMARY if not self.disabled else constants.TEXT_GRAY

        Ellipse:
            pos: self.pos
            size: self.size

        Color:
            rgba: 1, 1, 1, 1

        Ellipse:
            pos: self.x + constants.WIRE_THICKNESS, self.y + constants.WIRE_THICKNESS
            size: self.width - 2 * constants.WIRE_THICKNESS, self.height - 2 * constants.WIRE_THICKNESS

    Label:
        size: source.width / 2, source.height / 2
        center_x: source.x + source.width
        center_y: source.y + source.height
        font_name: 'assets/fonts/MDIcons.ttf'
        text: unichr(0xf278)
        color: 0, 0, 0, 0.86
        disabled_color: 0, 0, 0, 0.86
        font_size: self.height / 1.5

    Label:
        size: source.width / 2, source.height / 2
        center_x: source.x + source.width
        center_y: source.y
        font_name: 'assets/fonts/MDIcons.ttf'
        text: unichr(0xf273)
        color: 0, 0, 0, 0.86
        disabled_color: 0, 0, 0, 0.86
        font_size: self.height / 1.5

    Label:
        pos: source.pos
        size: source.size
        font_name: 'assets/fonts/MDIcons.ttf'
        text: unichr(0xf387)
        color: 0, 0, 0, 0.86
        disabled_color: 0, 0, 0, 0.86
        font_size: self.height / 1.5


<OscilloscopeWidget>:
    # Oscilloscope consists of a circular marking on the top and bits of wire on
    # the bottom. We assume the square with sidelength length positioned at the
    # top of the rect will be the circular marking, and the wire comes to a stop
    # at the middle bottom.
    id: osc
    color: 1, 1, 1
    canvas:
        Color:
            rgba: constants.PRIMARY if not self.disabled else constants.TEXT_GRAY
        Line:
            points: self.center_x, self.y + self.height, self.center_x, self.y + self.width / 2
            width: constants.WIRE_THICKNESS / 2
        Color:
            rgba: constants.DARK_PRIMARY
        Ellipse:
            size: constants.WIRE_THICKNESS * (2 ** 0.5), constants.WIRE_THICKNESS * (2 ** 0.5)
            pos: self.center_x - constants.WIRE_THICKNESS / (2 ** 0.5), self.y + self.height - constants.WIRE_THICKNESS / (2 ** 0.5)


    Widget:
        pos: self.parent.pos
        size: self.parent.width, self.parent.width

        canvas:
            Color:
                rgba: constants.WIRE_HIGHLIGHT if osc.hovered and not osc.disabled else (0, 0, 0, 0)

            Ellipse:
                pos: self.x - constants.WIRE_THICKNESS / 2.0, self.y - constants.WIRE_THICKNESS / 2.0
                size: self.width + constants.WIRE_THICKNESS, self.height + constants.WIRE_THICKNESS

            Color:
                rgba: constants.PRIMARY if not self.disabled else constants.TEXT_GRAY

            Ellipse:
                pos: self.pos
                size: self.size

            Color:
                rgba: 1, 1, 1, 1

            Ellipse:
                pos: self.x + constants.WIRE_THICKNESS, self.y + constants.WIRE_THICKNESS
                size: self.width - 2 * constants.WIRE_THICKNESS, self.height - 2 * constants.WIRE_THICKNESS

            Color:
                hsv: self.parent.color

            Ellipse:
                pos: self.x + constants.WIRE_THICKNESS * 2, self.y + constants.WIRE_THICKNESS * 2
                size: self.width - constants.WIRE_THICKNESS * 4, self.height - constants.WIRE_THICKNESS * 4

            Color:
                rgba: 1, 1, 1, 1

            Ellipse:
                pos: self.x + constants.WIRE_THICKNESS * 2.5, self.y + constants.WIRE_THICKNESS * 2.5
                size: self.width - constants.WIRE_THICKNESS * 5, self.height - constants.WIRE_THICKNESS * 5

