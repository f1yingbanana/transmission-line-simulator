#
# Transmission Line Simulator
# 
# Author(s): Jiacong Xu
# Created: Jul-9-2017
#

#import constants util.constants

<CircuitView>:
    _begin: 0, 0
    _end: 0, 0

    canvas:
        # We draw a bunch of wires that are a part of every diagram
        Color:
            rgba: 0, 0, 0, 0.86

        Ellipse:
            pos: self._begin[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Ellipse:
            pos: self._begin[0] - constants.WIRE_THICKNESS / 2.0, self._end[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Ellipse:
            pos: self._end[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Ellipse:
            pos: self._end[0] - constants.WIRE_THICKNESS / 2.0, self._end[1] - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        RoundedRectangle:
            pos: self._begin[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] + constants.WIRE_THICKNESS * 1.5
            size: constants.WIRE_THICKNESS, self._end[1] - self._begin[1] - 3 * constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        RoundedRectangle:
            pos: self._end[0] - constants.WIRE_THICKNESS / 2.0, self._begin[1] + constants.WIRE_THICKNESS * 1.5
            size: constants.WIRE_THICKNESS, self._end[1] - self._begin[1] - 3 * constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2

        RoundedRectangle:
            pos: self._begin[0] + constants.WIRE_THICKNESS * 1.5, self._begin[1] - constants.WIRE_THICKNESS / 2.0
            size: self._end[0] - self._begin[0] - 3 * constants.WIRE_THICKNESS , constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2


<Wire>:
    canvas:
        Color:
            rgba: constants.WIRE_HIGHLIGHT if self.hovered else (0, 0, 0, 0)

        RoundedRectangle:
            pos: self.x, self.center_y - constants.WIRE_THICKNESS
            size: max(0, self.width), 2 * constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS

        Color:
            rgba: constants.PRIMARY

        RoundedRectangle:
            pos: self.x + constants.WIRE_THICKNESS / 2, self.center_y - constants.WIRE_THICKNESS / 2
            size: max(0, self.width - constants.WIRE_THICKNESS), constants.WIRE_THICKNESS
            radius: constants.WIRE_THICKNESS / 2, constants.WIRE_THICKNESS / 2


<Connector>:
    canvas:
        Color:
            rgba: constants.WIRE_HIGHLIGHT if self.hovered else (0, 0, 0, 0)

        Ellipse:
            pos: self.center_x - constants.WIRE_THICKNESS, self.center_y - constants.WIRE_THICKNESS
            size: 2 * constants.WIRE_THICKNESS, 2 * constants.WIRE_THICKNESS

        Color:
            rgba: constants.DARK_PRIMARY

        Ellipse:
            pos: self.center_x - constants.WIRE_THICKNESS / 2.0, self.center_y - constants.WIRE_THICKNESS / 2.0
            size: constants.WIRE_THICKNESS, constants.WIRE_THICKNESS



<Load>:
    canvas:
        Color:
            rgba: constants.WIRE_HIGHLIGHT if self.hovered else (0, 0, 0, 0)

        Rectangle:
            pos: self.pos[0] - constants.WIRE_THICKNESS / 2.0, self.pos[1] - constants.WIRE_THICKNESS / 2.0
            size: self.size[0] + constants.WIRE_THICKNESS, self.size[1] + constants.WIRE_THICKNESS

        Color:
            rgba: constants.PRIMARY

        Rectangle:
            pos: self.pos
            size: self.size

        Color:
            rgba: 1, 1, 1, 1

        Rectangle:
            pos: self.x + constants.WIRE_THICKNESS, self.y + constants.WIRE_THICKNESS
            size: self.width - 2 * constants.WIRE_THICKNESS, self.height - 2 * constants.WIRE_THICKNESS


<Source>:
    id: source

    canvas:
        Color:
            rgba: constants.WIRE_HIGHLIGHT if self.hovered else (0, 0, 0, 0)

        Ellipse:
            pos: self.pos[0] - constants.WIRE_THICKNESS / 2.0, self.pos[1] - constants.WIRE_THICKNESS / 2.0
            size: self.size[0] + constants.WIRE_THICKNESS, self.size[1] + constants.WIRE_THICKNESS

        Color:
            rgba: constants.PRIMARY

        Ellipse:
            pos: self.pos
            size: self.size

        Color:
            rgba: 1, 1, 1, 1

        Ellipse:
            pos: self.x + constants.WIRE_THICKNESS, self.y + constants.WIRE_THICKNESS
            size: self.width - 2 * constants.WIRE_THICKNESS, self.height - 2 * constants.WIRE_THICKNESS

    Label:
        pos: source.pos
        size: source.size
        font_name: 'assets/fonts/MDIcons.ttf'
        text: unichr(0xf387)
        color: 0, 0, 0, 0.86
        font_size: 50

